---
import { configLoader } from "../utils/configLoader";
const CONFIG = await configLoader();

const { title, url, tags, post, image, selected_tag, author, created, excerpt } =
  Astro.props;

import PostExcerpt from "@igor.dvlpr/astro-post-excerpt";

let image_path: string;
let image_html_string: string;
if (image) {
  if (image.includes("http")) {
    image_path = image;
  } else {
    image_path = "/images/" + image;
  }
  image_html_string =
    '<a href="' +
    url +
    '"><img src="' +
    image_path +
    '" alt="' +
    title +
    '" class="boxed-image w-full h-96 object-cover object-center mb-0"></a>';
} else {
  image_html_string = "";
}

// let SELECTED_TAG: string;
// if (selected_tag) {
//   SELECTED_TAG = selected_tag;
// }

let byline_html_string: string;
if (CONFIG.POST_LISTING_SHOW_AUTHOR || CONFIG.POST_LISTING_SHOW_DATE) {
  byline_html_string = '<p class="byline mb-2">Posted';
  if (CONFIG.POST_LISTING_SHOW_AUTHOR == true) {
    byline_html_string += " by " + author;
  }
  if (CONFIG.POST_LISTING_SHOW_DATE == true) {
    byline_html_string += " on " + created.toString().slice(0, 10);
  }
  byline_html_string += "</p>";
} else {
  byline_html_string = "";
}
---

<article class="boxed border-2 mb-6 border-grey-900">
  <Fragment set:html={image_html_string} /><div class="p-4">
    <a class="" href={url}><h1 class="text-3xl mb-3">{title}</h1></a>
    <Fragment set:html={byline_html_string} />
    <p class="post-excerpt">
      {
        // Check for excerpt. If null or not set, fallback to PostExcerpt.
        excerpt || <PostExcerpt post={post} words={40} addEllipsis={true} />
      }
    </p>
    <div class="mt-4">
      {
        tags.map((tag: string) => {
          const separator: string =
            tags.indexOf(tag) < tags.length - 1
              ? ' <span class="text-neutral-400">|</span> '
              : "";
          const selected_tag_styling: string =
          selected_tag == tag
              ? "font-bold italic text-neutral-600 p-0 tag m-0"
              : "italic text-neutral-600 p-0 tag m-0";
          return (
            <>
              <span class={selected_tag_styling}>
                <a href={`/tags/${tag.replace(/\s+/g, "-")}`}>#{tag}</a>
              </span>
              <Fragment set:html={separator} />
            </>
          );
        })
      }
    </div>
  </div>
</article>
