---
import { configLoader } from "../utils/configLoader";
const CONFIG = await configLoader();

const {
  meta_type,
  meta_title,
  meta_description,
  meta_image,
  meta_url,
  meta_sitename,
} = Astro.props;

const metadata_type: string = meta_type ? meta_type : "website";

let OG_IMAGE: string;
let TWIT_IMAGE: string;
if (meta_image) {
  OG_IMAGE =
    '<meta property="og:image" content="' + meta_image + '" />';
  TWIT_IMAGE =
    '<meta name="twitter:card" content="summary_large_image" /> \
    <meta name="twitter:image" content="' +
    meta_image +
    '" />';
} else {
  OG_IMAGE = "";
  TWIT_IMAGE = '<meta name="twitter:card" content="summary" /> ';
}

let TWIT_META_BLOCK: string;
if (CONFIG.SUPPORT_TWITTER_META) {
  TWIT_META_BLOCK =
    '<!-- Twitter Meta Tags --> \
<meta name="twitter:title" content="' +
    meta_title +
    '" /> \
<meta name="twitter:description" content="' +
    meta_description +
    '" /> \
' +
    TWIT_IMAGE;
} else {
  TWIT_META_BLOCK = "";
}
---

<!-- Metadata -->
<meta charset="utf-8" />
<link rel="canonical" href={meta_url} />
<link rel="sitemap" href="/sitemap-index.xml" />
<meta name="generator" content={Astro.generator} />
<meta name="title" content={meta_title} />
<meta name="description" content={meta_description} />
<title>{meta_title}</title>
<!-- Open Graph -->
<meta property="og:type" content={metadata_type} />
<meta property="og:title" content={meta_title} />
<meta property="og:description" content={meta_description} />
<Fragment set:html={OG_IMAGE} />
<meta property="og:url" content={meta_url} />
<meta property="og:site_name" content={meta_sitename} />
<Fragment set:html={TWIT_META_BLOCK} />
