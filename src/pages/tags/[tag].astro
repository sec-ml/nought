---
import { configLoader } from "../../utils/configLoader";
const CONFIG = await configLoader();

import { filterBlogPosts } from '../../utils/filterBlogPosts';

import { getCollection } from "astro:content";
import { Masonry } from "astro-masonry";
import BaseLayout from "../../layouts/Base.astro";
import BlogPost from "../../components/BlogPost.astro";

export async function getStaticPaths() {
  const blog_posts = filterBlogPosts(await getCollection("blog"));
  
  blog_posts.sort(
    (a: any, b: any) =>
      Date.parse(b.data.dateCreated) - Date.parse(a.data.dateCreated)
  );

  // Create set of tags (to de-dupe the list). Convert each to lowercase inline.
  const unique_tags = [
    ...new Set(
      blog_posts
        .map((post: any) => (Array.isArray(post.data.tags) ? post.data.tags.map((tag: string) => tag.toLowerCase()) : []))
        .flat()
    ),
  ];

  // Find which posts are tagged with this tag
  return unique_tags.map((tag) => {
    const filtered_blog_posts = blog_posts.filter(
      (post: any) =>
        Array.isArray(post.data.tags) && post.data.tags.map((t: string) => t.toLowerCase()).includes(tag) // check each post's tags (but toLowerCase for comparison)
    );
    const postQty = filtered_blog_posts.length;
    return {
      params: { tag: tag.replace(/\s+/g, "-") },
      props: { posts: filtered_blog_posts, original_tag: tag, count: postQty },
    };
  });
}

const { posts, original_tag, count } = Astro.props;

if (count == 1) {
  var break_two = 1;
} else {
  var break_two = 2;
}

const page_title = original_tag + " | " + CONFIG.TITLE;
const page_description = "Posts tagged with '" + original_tag + "'";
const page_url = CONFIG.URL + "/tags/" + original_tag.replace(/\s+/g, "-");
---

<BaseLayout
  page_title={page_title}
  page_description={page_description}
  page_url={page_url}
>
<div class="p-6 max-w-7xl">
  <Masonry breakpointCols={{ default: break_two, 1224: 1 }} , class="gap-6">
    <div class="border-2 mb-6 bg-base-300 text-base-content border-base-content p-4 rounded-field">
      <h1 class="text-4xl font-bold">
        {count} post{count == 1 ? "" : "s"} tagged with <i><span class="underline decoration-accent">{original_tag}</span></i>
      </h1>
    </div>
    {
      posts.map((post: any) => (
        <BlogPost
          url={"/" + post.data.slug}
          title={post.data.title}
          tags={post.data.tags}
          post={post}
          author={post.data.author}
          created={post.data.dateCreated}
          image={post.data.image}
          image_alt={post.data.imageAlt}
          excerpt={post.data.excerpt}
          // selected_tag, for lack of a better name, is the tag page that the user is currently viewing
          selected_tag={original_tag}
        />
      ))
    }
  </Masonry>
  </div>
</BaseLayout>
