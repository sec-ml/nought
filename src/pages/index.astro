---
import { configLoader } from '../utils/configLoader';
const CONFIG = await configLoader();

import { filterBlogPosts } from '../utils/filterBlogPosts';

import PaginateNav from '../components/PaginateNav.astro';
import { getCollection } from "astro:content";
import { Masonry } from 'astro-masonry';
import BaseLayout from '../layouts/Base.astro';
import BlogPost from '../components/BlogPost.astro';
import { paginate } from "../utils/paginate.js";

let posts_per_page =
    CONFIG.PAGINATION_ITEMS_PER_PAGE ? CONFIG.PAGINATION_ITEMS_PER_PAGE : 1000;

const blog_posts = filterBlogPosts(await getCollection("blog"));

blog_posts.sort((a:any, b:any) => Date.parse(b.data.dateCreated) - Date.parse(a.data.dateCreated));

const blog_posts_count = blog_posts.length;
const current_page = 1;
const total_pages = Math.ceil(blog_posts_count / posts_per_page);
const paginated_posts = paginate(blog_posts, posts_per_page, current_page);

const break_two = blog_posts_count == 1 ? 1 : 2;

const page_title = CONFIG.TITLE+" - "+CONFIG.DESCRIPTION;
const page_url = CONFIG.URL;
---
<BaseLayout page_title={page_title} page_description={CONFIG.DESCRIPTION} page_url={page_url}>
  <Masonry breakpointCols={{default: break_two, 1224: 1}}, class="flex gap-6">
    {paginated_posts.map((post: any) => <BlogPost url={"/" + post.data.slug} title={post.data.title} tags={post.data.tags} post={post} image={post.data.image} image_alt={post.data.imageAlt} tag=null author={post.data.author} created={post.data.dateCreated} excerpt={post.data.excerpt} />)}
  </Masonry>
  
    {total_pages > 1 && (
    <PaginateNav current_page={current_page} total_pages={total_pages} />
    )}
  
</BaseLayout>
