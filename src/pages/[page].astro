---
import { configLoader } from '../utils/configLoader';
const CONFIG = await configLoader();

import PaginateNav from "../components/PaginateNav.astro";
import { getCollection } from "astro:content";
import { Masonry } from 'astro-masonry';
import BaseLayout from '../layouts/Base.astro';
import BlogPost from '../components/BlogPost.astro';
import { paginate } from "../utils/paginate.js";

export async function getStaticPaths() {
  const allPosts = (await getCollection("blog"))
    .filter((post) => import.meta.env.PROD ? post.data.draft !== true : true);
    
  const posts_per_page =
    CONFIG.PAGINATION_ITEMS_PER_PAGE ? CONFIG.PAGINATION_ITEMS_PER_PAGE : 100000;
  const total_pages = Math.ceil(allPosts.length / posts_per_page);

  // total_pages is the total number required to display all posts / posts_per_page
  // index.astro is page one, so we're starting from page 2 (note `page: (i + 2).toString()`
  // becomes the page number in the URL).
  return Array.from({ length: total_pages - 1 }, (_, i) => ({
    params: { page: (i + 2).toString() },
    props: { posts_per_page, total_pages, allPosts },
  }));
}

const { page } = Astro.params;
const { posts_per_page, total_pages, allPosts } = Astro.props;

allPosts.sort((a:any, b:any) => Date.parse(b.data.dateCreated) - Date.parse(a.data.dateCreated));

const count = allPosts.length;
const current_page = parseInt(page);
const paginated_posts = paginate(allPosts, posts_per_page, current_page);

const break_two = count == 1 ? 1 : 2;

const page_title = CONFIG.TITLE + " - Page " + current_page + " - " + CONFIG.DESCRIPTION;
const page_url = CONFIG.URL + "/" + current_page;
---
<BaseLayout page_title={page_title} page_description={CONFIG.DESCRIPTION} page_url={page_url}>
  <Masonry breakpointCols={{default: break_two, 1224: 1}}, class="flex gap-6">
    {paginated_posts.map((post: any) => <BlogPost url={"/" + post.data.slug} title={post.data.title} tags={post.data.tags} post={post} image={post.data.image} tag=null author={post.data.author} created={post.data.dateCreated} excerpt={post.data.excerpt} />)}
  </Masonry>
  <PaginateNav current_page={current_page} total_pages={total_pages} />
</BaseLayout>